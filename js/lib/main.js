// Generated by CoffeeScript 1.3.1
(function() {
  var copyToCanvas, videoError, videoSuccess;

  qrcode.callback = function(data) {
    return alert(data);
  };

  copyToCanvas = function(video, canvas, ctx) {
    ctx.restore();
    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);
    try {
      qrcode.decode();
    } catch (e) {
      if (e.toString() === "Couldn't find enough finder patterns") {

      } else {
        ctx.restore();
        ctx.translate(canvas.width, 0);
        ctx.scale(-1, 1);
        try {
          qrcode.decode();
        } catch (e2) {
          ctx.restore();
          ctx.rotate(Math.PI);
          ctx.drawImage(canvas, canvas.width * -1, canvas.height * -1);
          try {
            qrcode.decode();
          } catch (e3) {

          } finally {
            ctx.rotate(Math.PI);
          }
        }
      }
    }
    return window.setTimeout((function() {
      return copyToCanvas(video, canvas, ctx);
    }), 1000 / 10);
  };

  videoError = function(error) {
    return console.log(error);
  };

  videoSuccess = function(video, stream) {
    var canvas, ctx;
    $('#video_placeholder').html(video);
    canvas = $('#qr-canvas').get(0);
    ctx = canvas.getContext('2d');
    ctx.save();
    return copyToCanvas(video, canvas, ctx);
  };

  Sinne.getUserVideo(videoSuccess, videoError, {
    width: 640,
    height: 480
  });

}).call(this);
